#!/bin/bash

#
# a simple deployment utility that knows to deploy to logically identified EAP nodes (1, 2, 3 ...)
#
# Usage:
#
#       deploy 1 2 ...
#

artifact=$(dirname $0)/../target/session-servlet.war

mode="" # can be deploy or undeploy, depending on the value of the symbolic link

function logical-id-to-target-dir() {

    [ -z "${RUNTIME_DIR}" ] && { echo "RUNTIME_DIR not defined, set it and try again" 1>&2; exit 1; }

    local td="${RUNTIME_DIR}/jboss-eap-6.4.6/profiles/eap-$1-reference/deployments"

    [ -d ${td} ] || { echo "${td} not a valid directory, logical target $1 cannot be mapped to a local directory" 1>&2; exit 1; }

    echo ${td}

    #scp ${artifact} ec2-user@${host}:/opt/jboss/standalone/deployments && echo "${host} deployment ok"
}

function target-dir-to-target-name() {

    local target_name=${1#*profiles/}
    target_name=${target_name%%/*}
    echo "${target_name}"
}

function main() {

    mode=$(basename $0)

    local target_dirs=""

    for i do
        target_dirs="${target_dirs} $(logical-id-to-target-dir ${i})" || exit 1
    done

    if [ "deploy" = "${mode}" ]; then

        [ ! -f ${artifact} ] && { echo "${artifact} not found, maybe you need to build it ..." 1>&2; exit 1; }

        for td in ${target_dirs}; do
            target_name=$(target-dir-to-target-name ${td}) || exit 1
            cp ${artifact} ${td} && echo "${target_name} deployment ok"
        done

    elif [ "undeploy" = "${mode}" ]; then

        for td in ${target_dirs}; do
            target_name=$(target-dir-to-target-name ${td}) || exit 1
            rm ${td}/* && echo "${target_name} undeployment ok"
        done


    else
        echo "we don't know to handle mode ${mode}" 1>&2;
        exit 1;
    fi



}

main $@
